name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/#7
  pull_request:
    branches:
      - feature/#7

jobs:
  deploy:
    name: Build Docker image and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Gradle
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build -x test

      - name: AWS 인증
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to Amazon ECR
        id: login-ecr
        # aws에서 공식적으로 제공하는 Github Actions 플러그인.
        uses: aws-actions/amazon-ecr-login@v2

        # CLI 명령어 직접 실행하여 ECR에 로그인 하는 방식
        # uses: aws-actions/amazon-ecr-login@v2

      - name: Docker image build
        run: docker build -t deepdot .

        # ECR의 경우 업로드된 이미지의 크기에 비례해 요금이 부과됨. 그래서 삭제처리 해주기
      - name: 기존 ECR에 업로드된 lastest 태그 이미지 삭제
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            aws ecr batch-delete-image \
              --region ap-northeast-2 \
              --repository-name deepdot \
              --image-ids imageTag=latest

        # 빌드된 이미지에 ECR용 이름(주소)태그 붙이는 명령어
      - name: Docker image tagging
        run: docker tag deepdot:latest ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

      - name: EC2 - Clean up & Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            echo "기존 컨테이너/이미지 정리"
            sudo docker ps -q | xargs -r sudo docker stop
            sudo docker ps -aq | xargs -r sudo docker rm
            sudo docker images -q | xargs -r sudo docker rmi
            sudo docker system prune -af

            echo "ECR 로그인"
            aws ecr get-login-password --region ap-northeast-2 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

            echo "이미지 Pull"
            sudo docker pull ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

            echo "컨테이너 실행"
            sudo docker stop hdev_server || true
            sudo docker rm hdev_server || true
            sudo docker run -d --env-file ~/root/.env -p 8080:8080 ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest
