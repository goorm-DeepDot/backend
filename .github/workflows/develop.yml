name: CI/CD Pipeline

on:
  push:
    branches:
      - develop/#2
  pull_request:
    branches:
      - develop/#2

jobs:
  deploy:
    name: Build Docker image and deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle (without tests)
        run: ./gradlew build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: docker build -t deepdot .

      - name: Tag Docker image for ECR
        run: docker tag deepdot:latest ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            echo "8080 포트 점유 프로세스 종료"
            PID=$(sudo lsof -t -i:8080)
            if [ -n "$PID" ]; then
              echo "Killing PID: $PID"
              sudo kill -9 $PID
            fi

            echo "ECR 로그인"
            aws ecr get-login-password --region ap-northeast-2 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

            echo "이전 deepdot 애플리케이션 컨테이너 중지 및 삭제 (Redis는 유지)"
            for id in $(sudo docker ps -q); do
              name=$(sudo docker inspect --format '{{.Name}}' $id | sed 's:/::')
              if [ "$name" != "redis" ]; then
                echo "Stopping and removing $name"
                sudo docker stop $id
                sudo docker rm $id
              fi
            done

            echo "deepdot 관련 이미지 정리"
            sudo docker images | grep deepdot | awk '{print $3}' | xargs -r sudo docker rmi

            echo "이미지 Pull"
            sudo docker pull ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest

            echo "새 컨테이너 실행"
            sudo docker run -d \
              --env-file ~/app.env \
              -p 8080:8080 \
              --name hdev_server \
              ${{ secrets.AWS_ECR_REGISTRY }}/deepdot:latest